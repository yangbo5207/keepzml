1:"$Sreact.fragment"
2:I[51790,["7525","static/chunks/7525-411280bffc37a107.js","8173","static/chunks/8173-1aab990e083a60ce.js","5926","static/chunks/5926-2f921190ce1e6581.js","3974","static/chunks/3974-a1a1a9aca3315bf5.js","7177","static/chunks/app/layout-42df43a67d50e5c7.js"],"default"]
3:I[73974,["7525","static/chunks/7525-411280bffc37a107.js","8173","static/chunks/8173-1aab990e083a60ce.js","5926","static/chunks/5926-2f921190ce1e6581.js","3974","static/chunks/3974-a1a1a9aca3315bf5.js","7177","static/chunks/app/layout-42df43a67d50e5c7.js"],"default"]
4:I[15244,[],""]
5:I[43866,[],""]
6:I[14547,[],"ClientSegmentRoot"]
7:I[99573,["7525","static/chunks/7525-411280bffc37a107.js","8173","static/chunks/8173-1aab990e083a60ce.js","5926","static/chunks/5926-2f921190ce1e6581.js","3974","static/chunks/3974-a1a1a9aca3315bf5.js","5145","static/chunks/app/reactprinciple/layout-34a0911eed779e1f.js"],"default"]
9:I[98087,["8150","static/chunks/7cfd557f-0718c923d48595ad.js","7525","static/chunks/7525-411280bffc37a107.js","4320","static/chunks/4320-eb0b4108191194bc.js","8173","static/chunks/8173-1aab990e083a60ce.js","3152","static/chunks/3152-e813ba8dd61cd947.js","8993","static/chunks/8993-2dc0c64dff56c673.js","6167","static/chunks/app/reactprinciple/(4.diff)/14_diffover/layout-218314fa717a7d2d.js"],"default"]
a:I[86213,[],"OutletBoundary"]
c:I[86213,[],"MetadataBoundary"]
e:I[86213,[],"ViewportBoundary"]
10:I[34835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d498c84e4ab246b3.css","style"]
:HL["/_next/static/css/0a9e87861d5bb349.css","style"]
:HL["/_next/static/css/738174a5e4c964fb.css","style"]
:HL["/_next/static/css/9abb76f7827dc954.css","style"]
:HL["/_next/static/css/b55814aba7c65cf0.css","style"]
0:{"P":null,"b":"IVXGMzcp4DCqEi8bpCkZH","p":"","c":["","reactprinciple","14_diffover"],"i":false,"f":[[["",{"children":["reactprinciple",{"children":["(4.diff)",{"children":["14_diffover",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d498c84e4ab246b3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0a9e87861d5bb349.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/738174a5e4c964fb.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/9abb76f7827dc954.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"zh","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"charSet":"UTF-8"}],["$","link",null,{"href":"https://framerusercontent.com/images/YRd2KCq4G2aXNg15aHvl7AtcGQ.png","rel":"icon","media":"(prefers-color-scheme: light)"}],["$","link",null,{"rel":"stylesheet","href":"https://rsms.me/inter/inter.css"}],["$","link",null,{"rel":"stylesheet","href":"https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css","integrity":"sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV","crossOrigin":"anonymous"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0 maximum-scale=1, user-scalable=no"}],["$","meta",null,{"name":"mobile-web-app-capable","content":"yes"}],["$","meta",null,{"name":"apple-mobile-web-app-status-bar-style","content":"black-translucent"}]]}],["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"children":[["$","$L3",null,{}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]}]]}]]}],{"children":["reactprinciple",["$","$1","c",{"children":[null,["$","$L6",null,{"Component":"$7","slots":{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","reactprinciple","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]},"params":{},"promise":"$@8"}]]}],{"children":["(4.diff)",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","reactprinciple","children","(4.diff)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["14_diffover",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b55814aba7c65cf0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L9",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","reactprinciple","children","(4.diff)","children","14_diffover","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h3",null,{"id":"假说论","children":"假说论"}],"\n",["$","p",null,{"children":"我们在思考算法问题的时候，一定要谨记一个前提，那就是没有完美的算法可以解决所有问题。 因此，在设计一个算法时，我们需要充分考虑应用场景，然后提出一个假说，从而极大的减少问题的复杂性，让解决方案变得更加简单。"}],"\n",["$","p",null,{"children":["在 React 的 diff 算法中，当我们要对比前后两棵树的差异时，我们的目标是",["$","strong",null,{"children":"尽可能少的创建节点"}],"。但是由于 DOM 操作的可能性太复杂了，因此如果要全部对比出来，复杂度就非常高。达到了 O(n^ 3) 这个级别。之所以这么复杂，是因为节点不仅可以增加删除，还可以移动。"]}],"\n",["$","p",null,{"children":"我们要分辨节点是否从子元素移动到了父元素，或者只是增加了一个父元素，判断过程非常复杂。因此，在设计 diff 算法时，React 放弃了这种情况的识别。他们根据实际情况提出的假说是：在实际情况中，整棵 DOM 树里，关于父子节点移动的情况是比较少的，因此，没有必要为了这种少部分情况加剧算法的压力。只要放弃识别这种情况，算法就能够得到极大的简化。"}],"\n",["$","h3",null,{"id":"同层比较","children":"同层比较"}],"\n",["$","p",null,{"children":["因此，当我们放弃考虑移动的情况，那么 diff 算法就只需要做一个事情，那就是",["$","strong",null,{"children":"同层比较"}],"。"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/reactprinciple/diff/override/1.png","alt":""}]}],"\n",["$","p",null,{"children":"比较之后，只会有两种情况："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"1、比较结果相同，直接复用节点"}],"\n",["$","li",null,{"children":"2、比较结果不同，则直接默认为从该节点开始，以下的全部节点都发生了变化，需要重新创建。"}],"\n"]}],"\n",["$","p",null,{"children":"如下图所示，虽然节点只是发生了移动，但是在 diff 过程中，会被认为 A 节点已经被删除，然后重新创建它。"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/reactprinciple/diff/override/2.png","alt":""}]}],"\n",["$","p",null,{"children":"或者如下图所示，仅仅只是父节点发生了变化，那么父节点以下的所有子节点都会被重新创建。"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/reactprinciple/diff/override/3.png","alt":""}]}],"\n",["$","p",null,{"children":"因此，在同层比较的思路之下，我们只需要遍历一次 Fiber Tree，就可以完成整个 diff 过程。时间复杂度降低到了 O(n)。在这个基础之上，我们只需要进一步学习在 React 中，是如何比较节点是否可以被复用的就能够完全掌握 diff 算法了。"}],"\n",["$","h3",null,{"id":"数组的比较","children":"数组的比较"}],"\n",["$","p",null,{"children":"同层比较也存在两种情况。"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"1、单节点比较"}],"\n",["$","li",null,{"children":"2、多节点比较，即数组 -> 列表 的比较过程"}],"\n"]}],"\n",["$","p",null,{"children":["这里我们需要特别注意的是，列表的比较过程，我们又必须",["$","strong",null,{"children":"重新考虑节点移动"}],"的情况。"]}],"\n",["$","p",null,{"children":"这是因为在同一个层级中，判断出节点是否发生了移动，是相对而言成本很低的一种比较方式。而重新创建则有可能面临更高的执行成本。"}],"\n",["$","p",null,{"children":"例如，我们将长列表的最后一个元素移动到第一个位置，如果不考虑移动，那么整个列表都会被重建，显然是得不偿失的。因此，在后面的学习中，我们会详细介绍在同层级下，如何判断节点是否发生了移动。"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/reactprinciple/diff/override/4.jpg","alt":""}]}]],null,["$","$La",null,{"children":"$Lb"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","VEM71dOshyPgoblZUyVRf",{"children":[["$","$Lc",null,{"children":"$Ld"}],["$","$Le",null,{"children":"$Lf"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$10","$undefined"],"s":false,"S":true}
8:{}
f:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
d:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"usehook - 前端顶级精英俱乐部"}],["$","meta","2",{"name":"description","content":"最好的前端学习网站, react, react19, react hooks, zustand"}],["$","meta","3",{"name":"author","content":"这波能反杀"}],["$","meta","4",{"name":"keywords","content":"react, react19, react hooks, zustand"}],["$","link","5",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
b:null
